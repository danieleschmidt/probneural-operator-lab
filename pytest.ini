[tool:pytest]
# Pytest configuration file

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Default options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    --color=yes
    --durations=10

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    gpu: marks tests that require GPU
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    benchmark: marks tests as benchmarks

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:torch.*
    ignore::FutureWarning:torch.*

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage
# (Coverage configuration is in pyproject.toml)

# Timeout (requires pytest-timeout)
timeout = 300
timeout_method = thread

# xvfb (for GUI tests, requires pytest-xvfb)
xvfb_width = 1280
xvfb_height = 1024
xvfb_colordepth = 24

# Benchmark (requires pytest-benchmark)
benchmark_min_rounds = 3
benchmark_max_time = 10.0
benchmark_sort = min
benchmark_compare_fail = mean:10%

# HTML report (requires pytest-html)
html_report = tests/reports/report.html
html_self_contained = true

# JSON report (requires pytest-json-report)
json_report = tests/reports/report.json
json_report_summary = true