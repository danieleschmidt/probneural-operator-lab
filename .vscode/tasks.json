{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Setup Development Environment",
            "type": "shell",
            "command": "${workspaceFolder}/scripts/setup-dev.sh",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Install development dependencies and setup environment"
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "pytest",
            "args": ["tests/", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Run all tests with verbose output"
        },
        {
            "label": "Run Tests with Coverage",
            "type": "shell", 
            "command": "pytest",
            "args": ["tests/", "--cov=probneural_operator", "--cov-report=html"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Run tests with coverage report"
        },
        {
            "label": "Format Code",
            "type": "shell",
            "command": "black",
            "args": ["."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Format Python code with Black"
        },
        {
            "label": "Sort Imports",
            "type": "shell",
            "command": "isort",
            "args": ["."],
            "group": "build", 
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Sort Python imports with isort"
        },
        {
            "label": "Lint Code",
            "type": "shell",
            "command": "ruff",
            "args": ["check", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Lint Python code with Ruff"
        },
        {
            "label": "Type Check",
            "type": "shell", 
            "command": "mypy",
            "args": ["probneural_operator/"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Run type checking with MyPy"
        },
        {
            "label": "Build Documentation",
            "type": "shell",
            "command": "make",
            "args": ["docs"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Build documentation with Sphinx"
        },
        {
            "label": "Run Benchmarks",
            "type": "shell",
            "command": "python",
            "args": ["benchmarks/uncertainty_benchmark.py"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Run performance benchmarks"
        },
        {
            "label": "Clean Cache",
            "type": "shell",
            "command": "find",
            "args": [".", "-type", "d", "-name", "__pycache__", "-exec", "rm", "-rf", "{}", "+", "2>/dev/null", "||", "true"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Clean Python cache files"
        },
        {
            "label": "Start Development Server",
            "type": "shell",
            "command": "python",
            "args": ["examples/production_server.py"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "detail": "Start development API server"
        }
    ]
}